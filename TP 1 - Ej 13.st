Object subclass: #Twitter	instanceVariableNames: 'users'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos 2-TP 1 - Ej 13'!!Twitter methodsFor: 'initialize' stamp: 'CristianBarbaro 4/16/2015 00:44'!initialize	self users: self usersClass new! !!Twitter methodsFor: 'accessors' stamp: 'CristianBarbaro 4/16/2015 00:43'!users: aCollection	users:=aCollection ! !!Twitter methodsFor: 'accessors' stamp: 'CristianBarbaro 4/16/2015 00:43'!users	^users! !!Twitter methodsFor: 'utils' stamp: 'CristianBarbaro 4/17/2015 11:05'!removeUserFromName: aName	"Si no existe usuario con este nombre, se envía nil, luego no se elimina nada."	self removeUser: (self users detect:  [ :user | user screenName = aName ])! !!Twitter methodsFor: 'utils' stamp: 'CristianBarbaro 4/17/2015 10:41'!addUser: aUser	"Debo verificar que ningun usuario tenga el mismo screenName"	self users detect: [ :user | user screenName = aUser screenName ] ifNone: [ self users add: aUser ]! !!Twitter methodsFor: 'utils' stamp: 'CristianBarbaro 4/17/2015 10:52'!removeUser: aUser	"Debe eliminarse el usuario ingresado, ver cómo eliminar sus tweets."	(self users includes: aUser)		ifTrue: [ 			aUser tweets do: [ :t | t retweetOf do: [ :rt | rt origin: rt ] ].			aUser tweets removeAll.			self users remove: aUser ]	"If it's false, nothing to do."! !!Twitter methodsFor: 'private' stamp: 'CristianBarbaro 4/16/2015 00:45'!usersClass	^OrderedCollection! !Object subclass: #Tweet	instanceVariableNames: 'text user origin retweeted'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos 2-TP 1 - Ej 13'!!Tweet methodsFor: 'initialization' stamp: 'CristianBarbaro 4/16/2015 00:36'!initialize	self text: ''.	self user: nil.	self origin: nil.	self retweeted: (self tweetsClass new)! !!Tweet methodsFor: 'initialization' stamp: 'CristianBarbaro 4/16/2015 00:25'!initializeWithText: aText withUser: aUser	self text: aText.	self user: aUser.	self origin: self! !!Tweet methodsFor: 'initialization' stamp: 'CristianBarbaro 4/16/2015 00:33'!initializeWithText: aText withUser: aUser withOrigin: aTweetOrigin	self initialize.	self text: aText.	self user: aUser.	self origin: aTweetOrigin ! !!Tweet methodsFor: 'accessors' stamp: 'CristianBarbaro 4/17/2015 10:42'!retweeted: aCollection	retweeted :=  aCollection! !!Tweet methodsFor: 'accessors' stamp: 'CristianBarbaro 4/16/2015 00:25'!origin: aTweetOrign	origin:= aTweetOrign ! !!Tweet methodsFor: 'accessors' stamp: 'CristianBarbaro 4/16/2015 00:11'!text 	^text! !!Tweet methodsFor: 'accessors' stamp: 'CristianBarbaro 4/16/2015 00:13'!user: aUser	user:= aUser! !!Tweet methodsFor: 'accessors' stamp: 'CristianBarbaro 4/16/2015 00:11'!text: aText	text:= aText! !!Tweet methodsFor: 'accessors' stamp: 'CristianBarbaro 4/16/2015 00:13'!user	^user! !!Tweet methodsFor: 'accessors' stamp: 'CristianBarbaro 4/16/2015 00:25'!origin	^origin ! !!Tweet methodsFor: 'accessors' stamp: 'CristianBarbaro 4/16/2015 00:35'!retweeted	"Returns a collection with tweet that references this."	^retweeted ! !!Tweet methodsFor: 'behavior' stamp: 'CristianBarbaro 4/16/2015 00:37'!addRetweetFor: aTweet	"aTweet references this instance as origin."	self retweeted add: aTweet! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Tweet class	instanceVariableNames: ''!!Tweet class methodsFor: 'construction' stamp: 'CristianBarbaro 4/16/2015 00:19'!newTweetWithText: aText from: aUser	^ self new		initializeWithText: aText withUser: aUser;		yourself! !!Tweet class methodsFor: 'construction' stamp: 'CristianBarbaro 4/16/2015 00:28'!newTweetWithText: aText from: aUser withOrigin: aTweetOrigin	^ self new		initializeWithText: aText withUser: aUser withOrigin: aTweetOrigin;		yourself! !Object subclass: #User	instanceVariableNames: 'screenName tweets'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos 2-TP 1 - Ej 13'!!User methodsFor: 'accessors' stamp: 'CristianBarbaro 4/16/2015 00:21'!tweets	^tweets! !!User methodsFor: 'accessors' stamp: 'CristianBarbaro 4/15/2015 22:45'!screenName: aName	screenName := aName! !!User methodsFor: 'accessors' stamp: 'CristianBarbaro 4/15/2015 22:45'!screenName	^screenName! !!User methodsFor: 'initialization' stamp: 'CristianBarbaro 4/15/2015 23:06'!initialize	self screenName: ''.	self tweets: self tweetsClass new! !!User methodsFor: 'private' stamp: 'CristianBarbaro 4/15/2015 23:06'!tweetsClass	^OrderedCollection ! !!User methodsFor: 'private' stamp: 'CristianBarbaro 4/15/2015 22:53'!tweets: aCollection	tweets:= aCollection! !!User methodsFor: 'behavior' stamp: 'CristianBarbaro 4/16/2015 00:42'!retweet: aTweet	"aTweet es retwitteado por el usuario que recibe este mensaje. Se guarda el nuevo tweet en la coleccion que contiene los tweets que retwittearon."	| newTweet |	newTweet := Tweet newTweetWithText: (aTweet text) from: self withOrigin: aTweet.	self tweets: newTweet .	aTweet addRetweetFor: newTweet ! !!User methodsFor: 'behavior' stamp: 'CristianBarbaro 4/16/2015 00:22'!addTweet: aText	self tweets add: (Tweet newTweetWithText: aText from: self)! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!User class	instanceVariableNames: ''!!User class methodsFor: 'construction' stamp: 'CristianBarbaro 4/15/2015 23:03'!newWithScreenName: aName	| instance |	instance := self new.	^ instance 		screenName: aName;		tweets: (instance tweetsClass) new;		yourself ! !TestCase subclass: #TestTwitter	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos 2-TP 1 - Ej 13'!