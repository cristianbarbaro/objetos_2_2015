Object subclass: #Topography	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos 2-TP 2 - Ej 03'!!Topography methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 16:27'!calculateProportionGround	^self subclassResponsibility 	! !!Topography methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 16:27'!calculateProportionWater	^ self subclassResponsibility! !!Topography methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 16:46'!equals: aTopography	^self subclassResponsibility ! !!Topography methodsFor: 'private' stamp: 'CristianBarbaro 4/16/2015 17:23'!equalsWater	^self subclassResponsibility ! !!Topography methodsFor: 'private' stamp: 'CristianBarbaro 4/16/2015 17:22'!equalsGround	^self subclassResponsibility ! !Topography subclass: #Water	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos 2-TP 2 - Ej 03'!!Water methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 16:21'!calculateProportionGround	^0! !!Water methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 16:22'!calculateProportionWater	^1! !!Water methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 23:19'!equals: aTopography	^aTopography equalsWater! !!Water methodsFor: 'private' stamp: 'CristianBarbaro 4/16/2015 17:21'!equalsWater	^true! !!Water methodsFor: 'private' stamp: 'CristianBarbaro 4/16/2015 17:21'!equalsGround	^false! !TestCase subclass: #TopographyTest	instanceVariableNames: 'mixed1 mixed2 mixed3 water ground'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos 2-TP 2 - Ej 03'!!TopographyTest methodsFor: 'setUp' stamp: 'CristianBarbaro 4/16/2015 23:57'!setUp	| col1 subMix1 c1 col2 subMix2 c2 |	"Creo una colección con las topologías estandar."	col1 := OrderedCollection new.	col1 add: Ground new.	col1 add: Water new.	col1 add: Ground new.	col1 add: Water new.	"Creo una topología mixta, irá dentro de la coleccion de topologías de una instancia de nivel	superior."	subMix1 := Mixed newWithTopographies: col1.	"Creo otra coleccion para guardar las topologías en la topología mixed de nivel superior."	c1 := OrderedCollection new.	c1 add: Ground new.	c1 add: Water new.	c1 add: Ground new.	c1 add: subMix1.	mixed1 := Mixed newWithTopographies: c1.		col2 := OrderedCollection new.	col2 add: Ground new.	col2 add: Water new.	col2 add: Ground new.	col2 add: Water new.	subMix2 := Mixed newWithTopographies: col2.	c2 := OrderedCollection new.	c2 add: Ground new.	c2 add: Water new.	c2 add: Ground new.	"Esta linea y la anterior deben modificarse"	c2 add: subMix2.	mixed2 := Mixed newWithTopographies: c2.		mixed3 := Mixed newWithTopographies: col1.		ground:= Ground new.	water:= Water new.! !!TopographyTest methodsFor: 'testing' stamp: 'CristianBarbaro 4/17/2015 10:09'!testCalculateProportionWater	self assert: (ground calculateProportionWater = 0).	self assert: (water calculateProportionWater = 1).	"Agregar casos para Mixeds."! !!TopographyTest methodsFor: 'testing' stamp: 'CristianBarbaro 4/16/2015 23:57'!testEquals	self assert: (mixed1 equals: mixed2).	self deny: (mixed1 equals: mixed3).! !!TopographyTest methodsFor: 'testing' stamp: 'CristianBarbaro 4/16/2015 23:58'!testCalculateProportionGround	self assert: (ground calculateProportionGround = 1).	self assert: (water calculateProportionGround = 0).	"Agregar casos para Mixeds."! !Topography subclass: #Mixed	instanceVariableNames: 'topographies'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos 2-TP 2 - Ej 03'!!Mixed methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 23:20'!equals: aTopography	"Retorna true si self es igual a aTopography."	| flag counter |	(self compareProportion: aTopography)		ifTrue: [ 			flag := true.			counter := 0.			[flag and: counter < 4]				whileTrue: [ 					counter := counter + 1.					flag := (aTopography topographies at: counter) equals: (self topographies at: counter) ].			^ flag ]		ifFalse: [ ^ false ]! !!Mixed methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 17:49'!calculateProportionGround	^ (self topographies inject: 0 into: [ :total :topography | total + topography calculateProportionGround ]) / 4! !!Mixed methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 17:33'!equalsGround	^false! !!Mixed methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 17:51'!calculateProportionWater	^(self topographies inject: 0 into: [ :total :topography | total + topography calculateProportionWater ]) / 4! !!Mixed methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 17:33'!equalsWater	^false! !!Mixed methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 22:55'!compareProportion: anotherTopography	"Retorna true si la proprción de agua y tierra es la misma para ambas topografías"	^ self calculateProportionGround = anotherTopography calculateProportionGround		and: self calculateProportionWater = anotherTopography calculateProportionWater! !!Mixed methodsFor: 'initialize' stamp: 'CristianBarbaro 4/16/2015 16:14'!initialize 	self topographies: OrderedCollection new.! !!Mixed methodsFor: 'accessors' stamp: 'CristianBarbaro 4/17/2015 10:19'!topographies: aCollection	aCollection size = 4		ifTrue: [ topographies := aCollection ]		ifFalse: [ "Mostrar mensaje de error." ]! !!Mixed methodsFor: 'accessors' stamp: 'CristianBarbaro 4/16/2015 16:11'!topographies	 ^topographies! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Mixed class	instanceVariableNames: ''!!Mixed class methodsFor: 'construction' stamp: 'CristianBarbaro 4/16/2015 16:13'!newWithTopographies: aCollection	 ^super new topographies: aCollection. ! !Topography subclass: #Ground	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos 2-TP 2 - Ej 03'!!Ground methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 16:21'!calculateProportionGround	^1! !!Ground methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 16:22'!calculateProportionWater	^0! !!Ground methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 17:21'!equals: aTopography	^aTopography equalsGround! !!Ground methodsFor: 'private' stamp: 'CristianBarbaro 4/16/2015 17:21'!equalsWater	^false! !!Ground methodsFor: 'private' stamp: 'CristianBarbaro 4/16/2015 17:21'!equalsGround	^true! !