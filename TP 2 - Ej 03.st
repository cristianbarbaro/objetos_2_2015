Object subclass: #Topography	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos 2-TP 2 - Ej 03'!!Topography methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 16:27'!calculateProportionGround	^self subclassResponsibility 	! !!Topography methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 16:27'!calculateProportionWater	^ self subclassResponsibility! !!Topography methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 16:46'!equals: aTopography	^self subclassResponsibility ! !!Topography methodsFor: 'private' stamp: 'CristianBarbaro 4/16/2015 17:23'!equalsWater	^self subclassResponsibility ! !!Topography methodsFor: 'private' stamp: 'CristianBarbaro 4/16/2015 17:22'!equalsGround	^self subclassResponsibility ! !Topography subclass: #Water	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos 2-TP 2 - Ej 03'!!Water methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 16:21'!calculateProportionGround	^0! !!Water methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 16:22'!calculateProportionWater	^1! !!Water methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 23:19'!equals: aTopography	^aTopography equalsWater! !!Water methodsFor: 'private' stamp: 'CristianBarbaro 4/16/2015 17:21'!equalsWater	^true! !!Water methodsFor: 'private' stamp: 'CristianBarbaro 4/16/2015 17:21'!equalsGround	^false! !TestCase subclass: #TopographyTest	instanceVariableNames: 'mixed1 mixed2 mixed3 water ground'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos 2-TP 2 - Ej 03'!!TopographyTest methodsFor: 'setUp' stamp: 'CristianBarbaro 4/18/2015 01:40'!setUp	| subMix1 subMix2 |	subMix1 := Mixed		newWithTopographies: Ground new		with: Water new		with: Ground new		with: Water new.	mixed1 := Mixed		newWithTopographies: Ground new		with: Water new		with: Ground new		with: subMix1.	subMix2 := Mixed		newWithTopographies: Ground new		with: Water new		with: Ground new		with: Water new.	mixed2 := Mixed		newWithTopographies: Ground new		with: Water new		with: Ground new		with: subMix2.	mixed3 := Mixed		newWithTopographies: Ground new		with: Water new		with: Ground new		with: Water new.	ground := Ground new.	water := Water new! !!TopographyTest methodsFor: 'testing' stamp: 'CristianBarbaro 4/17/2015 10:09'!testCalculateProportionWater	self assert: (ground calculateProportionWater = 0).	self assert: (water calculateProportionWater = 1).	"Agregar casos para Mixeds."! !!TopographyTest methodsFor: 'testing' stamp: 'CristianBarbaro 4/16/2015 23:57'!testEquals	self assert: (mixed1 equals: mixed2).	self deny: (mixed1 equals: mixed3).! !!TopographyTest methodsFor: 'testing' stamp: 'CristianBarbaro 4/16/2015 23:58'!testCalculateProportionGround	self assert: (ground calculateProportionGround = 1).	self assert: (water calculateProportionGround = 0).	"Agregar casos para Mixeds."! !Topography subclass: #Mixed	instanceVariableNames: 'topographies'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos 2-TP 2 - Ej 03'!!Mixed methodsFor: 'private' stamp: 'CristianBarbaro 4/18/2015 01:08'!topographies: aCollection	topographies := aCollection! !!Mixed methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 23:20'!equals: aTopography	"Retorna true si self es igual a aTopography."	| flag counter |	(self compareProportion: aTopography)		ifTrue: [ 			flag := true.			counter := 0.			[flag and: counter < 4]				whileTrue: [ 					counter := counter + 1.					flag := (aTopography topographies at: counter) equals: (self topographies at: counter) ].			^ flag ]		ifFalse: [ ^ false ]! !!Mixed methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 17:49'!calculateProportionGround	^ (self topographies inject: 0 into: [ :total :topography | total + topography calculateProportionGround ]) / 4! !!Mixed methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 17:33'!equalsGround	^false! !!Mixed methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 17:51'!calculateProportionWater	^(self topographies inject: 0 into: [ :total :topography | total + topography calculateProportionWater ]) / 4! !!Mixed methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 17:33'!equalsWater	^false! !!Mixed methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 22:55'!compareProportion: anotherTopography	"Retorna true si la proprción de agua y tierra es la misma para ambas topografías"	^ self calculateProportionGround = anotherTopography calculateProportionGround		and: self calculateProportionWater = anotherTopography calculateProportionWater! !!Mixed methodsFor: 'initialize' stamp: 'CristianBarbaro 4/18/2015 00:33'!initialize	"Falta checkear si la mixta no es pura"	self topographies: OrderedCollection new! !!Mixed methodsFor: 'accessors' stamp: 'CristianBarbaro 4/16/2015 16:11'!topographies	 ^topographies! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Mixed class	instanceVariableNames: ''!!Mixed class methodsFor: 'construction' stamp: 'CristianBarbaro 4/18/2015 01:32'!newWithTopographies: topographyOne with: topographyTwo with: topographyThree with: topographyFour	| collection |	collection := OrderedCollection new.	collection		add: topographyOne;		add: topographyTwo;		add: topographyThree;		add: topographyFour.	(self verifyTypeTopographyMixt: collection)		ifFalse: [ ^ self new topographies: collection ]		ifTrue: [ UIManager default activate abort: 'La topografía mixta no debe estar compuesta por topografías del mismo tipo.' ]! !!Mixed class methodsFor: 'utils' stamp: 'CristianBarbaro 4/18/2015 01:29'!pureGround: aCollection	^ (aCollection inject: 0 into: [ :counter :topography | counter + topography calculateProportionGround ]) = 4! !!Mixed class methodsFor: 'utils' stamp: 'CristianBarbaro 4/18/2015 01:20'!verifyTypeTopographyMixt: aCollection	"Se verifica que la topografía mixta no esté compuesta por los mismos tipos."	^ (self pureWater: aCollection) or: (self pureGround: aCollection)! !!Mixed class methodsFor: 'utils' stamp: 'CristianBarbaro 4/18/2015 01:29'!pureWater: aCollection	^ (aCollection inject: 0 into: [ :counter :topography | counter + topography calculateProportionWater ]) = 4! !Topography subclass: #Ground	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos 2-TP 2 - Ej 03'!!Ground methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 16:21'!calculateProportionGround	^1! !!Ground methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 16:22'!calculateProportionWater	^0! !!Ground methodsFor: 'utils' stamp: 'CristianBarbaro 4/16/2015 17:21'!equals: aTopography	^aTopography equalsGround! !!Ground methodsFor: 'private' stamp: 'CristianBarbaro 4/16/2015 17:21'!equalsWater	^false! !!Ground methodsFor: 'private' stamp: 'CristianBarbaro 4/16/2015 17:21'!equalsGround	^true! !